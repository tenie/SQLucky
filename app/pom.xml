<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		  <groupId>net.tenie</groupId>
		  <artifactId>SQLucky-pom</artifactId>
		  <version>2.0.0</version> 
	</parent>
	<groupId>net.tenie</groupId>
	<artifactId>SQLucky</artifactId>
	<version>2.0.0</version>
	<packaging>jar</packaging>

	<name>SQLucky</name>

	<properties>
		<maven.test.skip>true</maven.test.skip>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.release>20</maven.compiler.release> 
		<!-- 这里的模块化的jar , 会被压缩成一个模块文件在二进制包中(runtimed的lib目录下的modules, 不能有空格 ,javafx.media javafx.swing, java.rmi, ,java.security.jgss-->
		<jvm.modules>jdk.xml.dom,jdk.jsobject,jdk.unsupported,java.instrument,java.base,java.security.jgss,java.logging,java.xml.crypto,java.desktop,java.transaction.xa,java.compiler,java.logging,java.management,java.scripting,java.xml,java.sql,java.sql.rowset</jvm.modules>
		<!-- org.codehaus.stax2,org.apache.xmlbeans,org.apache.poi.poi,org.apache.poi.ooxml.schemas,
		org.apache.poi.ooxml,org.apache.logging.log4j,-->
		<!-- 生成安装包用 -->
		<app.name>SQLucky</app.name>
		<app.version>2.0.0</app.version>
		<app.vendor>Tenie.net</app.vendor>
		<project.description>SQLucky</project.description>
		<!--  非模块化的jar , 存放在模块路径,  这里的jar会被单独复制到app的mods中 -->
		<non.modules.path>${project.build.directory}/non-mods</non.modules.path>
		<!-- java 启动参数 
		-->
		<sqlcuky.launch.options> --add-exports javafx.graphics/com.sun.javafx.scene.traversal=org.controlsfx.controls --add-exports javafx.graphics/com.sun.javafx.scene=org.controlsfx.controls --add-opens javafx.controls/javafx.scene.control=SQLucky --add-opens java.base/java.lang.reflect=com.jfoenix --add-exports javafx.graphics/com.sun.javafx.application=SQLucky --add-opens java.base/java.lang=com.jfoenix --add-exports org.controlsfx.controls/impl.org.controlsfx.tableview2.filter.parser=SQLucky --add-exports org.controlsfx.controls/impl.org.controlsfx.tableview2.filter.parser.aggregate=SQLucky </sqlcuky.launch.options>
	</properties>

	<organization>
		<name>https://github.com/tenie/SQLucky</name>
	</organization>

	<dependencies>
	 
<dependency>
    <groupId>org.apache.poi</groupId>
    <artifactId>poi</artifactId>
</dependency> 
<dependency>
    <groupId>org.apache.poi</groupId>
    <artifactId>poi-ooxml</artifactId>
</dependency>
 
<dependency>
	  <groupId>org.apache.xmlbeans</groupId>
      <artifactId>xmlbeans</artifactId>
</dependency>
<dependency>
	  <groupId>org.apache.commons</groupId>
	  <artifactId>commons-collections4</artifactId> 
</dependency>

<dependency>
	  <groupId>org.apache.commons</groupId>
	  <artifactId>commons-math3</artifactId>
</dependency>
<dependency>
	  <groupId>commons-codec</groupId>
	  <artifactId>commons-codec</artifactId> 
</dependency>

	
<dependency>
	 <groupId>com.zaxxer</groupId>
 	  <artifactId>SparseBitSet</artifactId>
</dependency>
 

	
 

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
			
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
		</dependency>

		<dependency>
			<groupId>org.dom4j</groupId>
			<artifactId>dom4j</artifactId>
		</dependency>
		
		
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis.generator</groupId>
			<artifactId>mybatis-generator-core</artifactId>
		</dependency>

		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
		</dependency>
		<!-- <dependency> -->
			<!-- <groupId>commons-beanutils</groupId> -->
			<!-- <artifactId>commons-beanutils</artifactId> -->
		<!-- </dependency> -->
		
		<dependency>
			<groupId>net.tenie</groupId>
			<artifactId>SQLucky-SDK</artifactId>
		</dependency>

		<dependency>
			<groupId>net.tenie</groupId>
			<artifactId>SQLucky-Plugin-Note</artifactId>
		</dependency>

		<dependency>
			<groupId>net.tenie</groupId>
			<artifactId>SQLucky-Plugin-WorkDataBackup</artifactId>
		</dependency>
		
		<dependency>
			<groupId>net.tenie</groupId>
			<artifactId>SQLucky-Plugin-Data-model</artifactId>
		</dependency>

		<dependency>
			<groupId>net.tenie</groupId>
			<artifactId>SQLucky-Connector-DB2</artifactId>
		</dependency>
		<dependency>
			<groupId>net.tenie</groupId>
			<artifactId>SQLucky-Connector-H2</artifactId>
		</dependency>
		<dependency>
			<groupId>net.tenie</groupId>
			<artifactId>SQLucky-Connector-Sqlite</artifactId>
		</dependency>
		<dependency>
			<groupId>net.tenie</groupId>
			<artifactId>SQLucky-Connector-Mysql</artifactId>
		</dependency>
		<dependency>
			<groupId>net.tenie</groupId>
			<artifactId>SQLucky-Connector-Mariadb</artifactId>
		</dependency>
		<dependency>
			<groupId>net.tenie</groupId>
			<artifactId>SQLucky-Connector-Postgresql</artifactId>
		</dependency>

		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-graphics</artifactId>
		</dependency>
		<!-- <dependency> -->
			<!-- <groupId>org.openjfx</groupId> -->
			<!-- <artifactId>javafx-swing</artifactId> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-media</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.openjfx</groupId>
		    <artifactId>javafx-web</artifactId> 
		</dependency>

		<!-- 控件库 -->
		<dependency>
			<groupId>com.jfoenix</groupId>
			<artifactId>jfoenix</artifactId>
		</dependency>

		<dependency>
			<groupId>org.fxmisc.richtext</groupId>
			<artifactId>richtextfx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
		</dependency>

		<!-- sql 格式化 -->
		<dependency>
			<groupId>com.github.vertical-blank</groupId>
			<artifactId>sql-formatter</artifactId>
		</dependency>
		<!-- 文件字符集 -->
		<dependency>
			<groupId>com.github.albfernandez</groupId>
			<artifactId>juniversalchardet</artifactId> 
		</dependency>

		<!-- io 操作文件 -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<!-- 数据库 JDBC -->
		<dependency>
			<groupId>com.ibm.db2</groupId>
			<artifactId>jcc</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>

		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency> 
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
		</dependency>

	</dependencies>

	<build>
	
	  <resources>
        <resource>
            <directory>src/main/resources</directory>
            <includes>
                <include>**/*.properties</include>
                <include>**/*.xml</include>
                <include>**/*.fxml</include>
                <include>**/*.css</include>
                <include>**/*.icns</include>
                <include>**/*.png</include>
                <include>**/*.ico</include>
                <include>**/*.jpg</include>
                <include>**/*.conf</include>
                <include>${imageType}</include>
				<!-- <include>**/*.mp4</include>
				<include>**/*.gif</include> -->
            </includes> 
            <filtering>false</filtering>
        </resource> 
        
         <resource> <!-- 配置文件 -->
                <directory>${project.basedir}/config</directory>
                <filtering>true</filtering>
                <targetPath>${project.build.directory}/packaging</targetPath>
         </resource>
    </resources>
    
		<plugins> 
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                           <!--  <excludeGroupIds>org.openjfx</excludeGroupIds> -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- 编译插件, 指定编译版本, 和编译时参数 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<release>${maven.compiler.release}</release> <!-- 指定编译版本 -->

					<compilerArgs>  <!-- 编译时参数 --> 
						<arg>--add-exports</arg>
						<arg>javafx.graphics/com.sun.javafx.application=SQLucky</arg>
						<arg>--add-exports</arg>
						<arg>org.controlsfx.controls/impl.org.controlsfx.tableview2.filter.parser=SQLucky</arg>
						<arg>--add-exports</arg>
						<arg>org.controlsfx.controls/impl.org.controlsfx.tableview2.filter.parser.aggregate=SQLucky</arg>
						<arg>--add-exports</arg>
						<arg>org.controlsfx.controls/impl.org.controlsfx.i18n=SQLucky</arg>
					</compilerArgs>

				</configuration>
			</plugin>
			 
			
			<!-- 安装依赖 -->
			<!-- <plugin> -->
				<!-- <groupId>org.apache.maven.plugins</groupId> -->
				<!-- <artifactId>maven-install-plugin</artifactId> -->
				<!-- <executions> -->
					<!-- <execution> -->
						<!-- <id>db2</id> -->
						<!-- <phase>clean</phase> -->
						<!-- <goals> -->
							<!-- <goal>install-file</goal> -->
						<!-- </goals> -->
						<!-- <configuration> -->
							<!-- <groupId>com.ibm.db2.jcc</groupId> -->
							<!-- <artifactId>db2jcc4</artifactId> -->
							<!-- <version>10.1</version> -->
							<!-- <packaging>jar</packaging> -->
							<!-- <file>${basedir}/lib/db2jcc4-10.1.jar</file> -->
							<!-- <createChecksum>true</createChecksum> -->
							<!-- <generatePom>true</generatePom> -->
						<!-- </configuration> -->
					<!-- </execution> -->
					<!-- <execution> -->
						<!-- <id>mysql</id> -->
						<!-- <phase>clean</phase> -->
						<!-- <goals> -->
							<!-- <goal>install-file</goal> -->
						<!-- </goals> -->
						<!-- <configuration> -->
							<!-- <groupId>mysql</groupId> -->
							<!-- <artifactId>mysql-connector-java</artifactId> -->
							<!-- <version>5.1.35</version> -->
							<!-- <packaging>jar</packaging> -->
							<!-- <file>${basedir}/lib/mysql-connector-java-5.1.35.jar</file> -->
							<!-- <createChecksum>true</createChecksum> -->
							<!-- <generatePom>true</generatePom> -->
						<!-- </configuration> -->
			
					<!-- </execution> -->
				<!-- </executions> -->
			<!-- </plugin> -->
			
			<!-- 将自己的包放入到依赖目录  verify-->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>copy mods/non-mods jar</id>
						<phase>package</phase>
						<configuration>
							<tasks> 
								<echo message="  path: ${project.build.directory}/mods"/>
								<!--  普通jar 复制到 目录non-mods-->
								<copy todir="${project.build.directory}/non-mods">
									<fileset dir="${project.build.directory}">
										<include name="${project.artifactId}-${project.version}.jar" />
									</fileset>
								</copy>
								<!--  模块jar 复制到 目录mods-->
								<copy todir="${project.build.directory}/mods">
									<fileset dir="${project.build.directory}/dependency">
										
										<!-- <include name="javafx-*.jar" />  -->
										
									</fileset>
								</copy>	
								
								<!-- 从target/dependency 复制到 target/non-mods;  别忘了添加依赖-->
								<copy todir="${project.build.directory}/non-mods">
									<fileset dir="${project.build.directory}/dependency">
										 
										<include name="javafx-*.jar" /> 
										  <include name="jfoenix*.jar" /> 
										<include name="controlsfx*.jar" />
										<include name="jackson*.jar" />  
										<include name="lombok*.jar" />  
										
										<include name="stax2*.jar" /> 
										
										<include name="woodstox-*.jar" /> 
										<include name="poi-*.jar" /> 
										
										<include name="log4j-api*.jar" />
										<include name="xmlbeans-*.jar" />  
										
										
										<include name="SparseBitSet-*.jar" />  
										
										
										<include name="curvesapi-*.jar" />
										
										 <include name="commons*.jar" />
										<include name="jsch*.jar" />
										<include name=" mybatis-generator*.jar" />
										
										
										<include name="flowless*.jar" />
										<include name="log4j-core*.jar" />
										<include name="log4j-slf4j-impl*.jar" />
										<include name="SQLucky-*.jar" />
										<include name="jcc*.jar" /> 
										<include name="mysql*.jar" />
										<include name="mariadb*.jar" />
										<include name="h2*.jar" />
										<include name="sqlite-jdbc*.jar" /> 
										<include name="mybatis*.jar" /> 
										<include name="fastjson*.jar" /> 
										<include name="juniversalchardet*.jar" /> 
										
										
										<include name="postgresql*.jar" />
										<include name="reactfx*.jar" /> 
										
										<include name="richtextfx*.jar" />
										<include name="slf4j-api*.jar" />
										<include name="sql-formatter*.jar" />
										<include name="httpcore5*.jar" />
										<include name="httpclient5*.jar" />
										
										<include name="dom4j*.jar" /> 

										
										
										<include name="undofx*.jar" />
										<include name="wellbehavedfx-*.jar" />
										
									</fileset>
								</copy>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>

					<execution>
						<id>${project.build.directory}/packaging</id>
						<phase>verify</phase>
						<configuration>
							<tasks> 
								<echo message="  path: ${project.build.directory}/jvm-image/conf"/>
								<!--  普通jar 复制到 目录non-mods-->
								<copy todir="${project.build.directory}/jvm-image/conf">
									<fileset dir="${project.build.directory}/packaging">
										<include name="*.conf" />
									</fileset>
								</copy> 
								 
							</tasks>
						</configuration> 
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<!-- https://github.com/wiverson/jtoolprovider-plugin -->
				<groupId>io.github.wiverson</groupId>
				<artifactId>jtoolprovider-plugin</artifactId>
				<version>1.0.34</version>
				<executions>
					<!-- 先生成一个jvm 镜像 -->
					<execution>
						<id>jlink</id>
						<phase>package</phase>
						<goals>
							<goal>java-tool</goal>
						</goals>
						<configuration>
							<toolName>jlink</toolName>
							<removeDirectories>${project.build.directory}/jvm-image/</removeDirectories>
							<modulePath>${local.modules.path}</modulePath>
							<addModules>${jvm.modules}</addModules>
							<output>${project.build.directory}/jvm-image</output>
							<args>
								<arg>--no-header-files</arg>
								<arg>--strip-debug</arg>
							</args>
						</configuration>
					</execution>
					
					<execution>
						<!-- 根据jlink的镜像 生成native 包 -->
						<id>jpackage</id>
						<phase>install</phase>
						<goals>
							<goal>java-tool</goal>
						</goals>
						<configuration>
							<toolName>jpackage</toolName> <!-- jpackage 的参数(在下面文件里) -->
							<removeDirectories>${project.build.directory}/sqlucky</removeDirectories>
							<args>@${project.build.directory}/packaging/${platform}-jpackage.txt</args>
						</configuration>
					</execution>
					 
				</executions>
			</plugin>
			
		</plugins>
	</build>
	<profiles> 
        <profile>
            <id>unix-active</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <properties>
                <platform>linux</platform>
                <local.modules.path>${env.JAVA_HOME}/jmods:${project.build.directory}/dependency</local.modules.path>
                <imageType>**/*.gif</imageType>
            </properties>
        </profile>
        <profile>
            <id>windows-active</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <platform>win</platform>
                <local.modules.path>D:/mydir/jdk/jdk-20.0.1/jmods</local.modules.path>
                <imageType>**/*.mp4</imageType>
            </properties> 
        </profile>
        <profile>
            <id>mac-active</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <platform>mac</platform> 
                <local.modules.path>${env.JAVA_HOME}/jmods:${project.build.directory}/dependency</local.modules.path>
                <imageType>**/*.mp4</imageType>
            </properties>
        </profile>
    </profiles>
</project>
